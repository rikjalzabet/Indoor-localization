[
    {
        "id": "28686cc3313ecabf",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "Generate random asset data",
        "func": "// Assuming msg.payload contains the random id from the query\nconst randomAssetId = Math.floor(Math.random() * 10000); // Random asset id\nconst name = `Asset${randomAssetId}`;\nconst x = (Math.random() * 100).toFixed(6); // Random x coordinate\nconst y = (Math.random() * 100).toFixed(6); // Random y coordinate\nconst lastSync = new Date().toISOString(); // Current timestamp\n\n// Convert the floorMapId from msg.payload to an integer\n//const floorMapId = parseInt(msg.payload[0].id, 10); // Ensure it's an integer\nconst floorMapId = msg.payload[0].id;\nconst active = Math.random() > 0.5; // Random active status\n\n// Update msg.params with the new values\nmsg.params = [name, x, y, lastSync, floorMapId, active];\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 260,
        "wires": [
            [
                "a1c848f631eca0be"
            ]
        ]
    },
    {
        "id": "a1c848f631eca0be",
        "type": "postgresql",
        "z": "f6f2187d.f17ca8",
        "name": "Insert asset",
        "query": "INSERT INTO assets (name, x, y, lastSync, floorMapId, active) \nVALUES ($1, $2, $3, $4, $5, $6);",
        "postgreSQLConfig": "521e2c9b19c962e2",
        "split": false,
        "rowsPerMsg": "",
        "x": 930,
        "y": 260,
        "wires": []
    },
    {
        "id": "02f95b2fde228170",
        "type": "inject",
        "z": "f6f2187d.f17ca8",
        "name": "Start",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "topic": "",
        "x": 170,
        "y": 260,
        "wires": [
            [
                "228113cc613ba360"
            ]
        ]
    },
    {
        "id": "228113cc613ba360",
        "type": "postgresql",
        "z": "f6f2187d.f17ca8",
        "name": "Random floorMapsId",
        "query": "SELECT id \nFROM floorMaps \nORDER BY RANDOM() \nLIMIT 1;",
        "postgreSQLConfig": "0585a90e498522aa",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 380,
        "y": 260,
        "wires": [
            [
                "28686cc3313ecabf"
            ]
        ]
    },
    {
        "id": "521e2c9b19c962e2",
        "type": "postgreSQLConfig",
        "name": "",
        "host": "postgres_db",
        "hostFieldType": "str",
        "port": "5432",
        "portFieldType": "num",
        "database": "il_database",
        "databaseFieldType": "str",
        "ssl": "false",
        "sslFieldType": "bool",
        "applicationName": "",
        "applicationNameType": "str",
        "max": "10",
        "maxFieldType": "num",
        "idle": "1000",
        "idleFieldType": "num",
        "connectionTimeout": "10000",
        "connectionTimeoutFieldType": "num",
        "user": "DB_USER",
        "userFieldType": "env",
        "password": "DB_PASSWORD",
        "passwordFieldType": "env"
    },
    {
        "id": "0585a90e498522aa",
        "type": "postgreSQLConfig",
        "name": "",
        "host": "postgres_db",
        "hostFieldType": "str",
        "port": "5432",
        "portFieldType": "num",
        "database": "il_database",
        "databaseFieldType": "str",
        "ssl": "false",
        "sslFieldType": "bool",
        "applicationName": "",
        "applicationNameType": "str",
        "max": "10",
        "maxFieldType": "num",
        "idle": "1000",
        "idleFieldType": "num",
        "connectionTimeout": "10000",
        "connectionTimeoutFieldType": "num",
        "user": "DB_USER",
        "userFieldType": "env",
        "password": "DB_PASSWORD",
        "passwordFieldType": "env"
    }
]